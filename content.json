{"meta":{"title":"Mango","subtitle":"","description":"","author":"MangoPro","url":"zengmiaokun.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"404.html","permalink":"zengmiaokun.github.io/404.html","excerpt":"","text":"404很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"about/index.html","permalink":"zengmiaokun.github.io/about/index.html","excerpt":"","text":"个人博客，分析学习心得。"},{"title":"所有分类","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"categories/index.html","permalink":"zengmiaokun.github.io/categories/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"friends/index.html","permalink":"zengmiaokun.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"mylist/index.html","permalink":"zengmiaokun.github.io/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-04-28T15:04:47.558Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"tags/index.html","permalink":"zengmiaokun.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"中文自动分词","slug":"Chinese_text_segmentation","date":"2020-04-19T08:50:00.000Z","updated":"2020-04-28T15:04:47.558Z","comments":true,"path":"2020/04/19/Chinese_text_segmentation/","link":"","permalink":"zengmiaokun.github.io/2020/04/19/Chinese_text_segmentation/","excerpt":"分词就是将连续的字序列按照一定的规范重新组合成词序列的过程。通俗地讲，中文自动分词就是利用计算机自动对中文文本中的词语进行切分，即把没有分割标志的汉字串 (没有词的边界) 转换到符合语言实际的词串即在书面汉语中建立词的边界。","text":"分词就是将连续的字序列按照一定的规范重新组合成词序列的过程。通俗地讲，中文自动分词就是利用计算机自动对中文文本中的词语进行切分，即把没有分割标志的汉字串 (没有词的边界) 转换到符合语言实际的词串即在书面汉语中建立词的边界。例如：英文：I like mango，计算机可以通过空格划分单词。中文：我喜欢芒果，计算机不知道芒和果两个字是一个词。把中文的汉字序列切分有有意义的词就是中文分词，也成为切词。我喜欢芒果 → 我 喜欢 芒果中文分词的作用和意义在中文自然语言处理中，词是最小的能够独立活动的有意义的语言成分，单字往往没有确切的含义。中文分词是文本挖掘的基础，对于输入的一段中文，成功的进行中文分词，可以达到电脑自动识别语句含义的效果。中文分词技术不仅仅应用于中文，还可以处理其他没有明显分隔符的文本，例如日语、韩语、以及手写英文等。中文并不是必须的，理论上深度学习模型在样本量足够大的情况下可以不进行分词。中文自动分词的难点歧义消除在中文分词中，如果一个待切分语句存在多个分词结果，则该语句存在切分歧义，被称为切分歧义句。待切分文本所含有的每个词如果也同样存在于分词系统词典中，则都有可能从文本中被切分出来。引起这种切分歧义的情况繁多，其中由汉字串引起的切分歧义可以划分为两种类型，即交集型切分歧义和组合型切分歧义。交集型歧义：交集型切分歧义指汉字串ＡＢＣ可以切分成Ａ｜ＢＣ和ＡＢ｜Ｃ，比如汉字串吹气球，有吹｜气球、吹气｜球这 两 种切分结果。组合型歧义：组合型切分歧义指汉字串ＡＢ可以作为整体不切分，也可以切分成Ａ｜Ｂ，比如中国人民，可以不切分，也可以切分为中国｜人民。交叉型歧义：交叉型歧义指交集型歧义和组合型歧义同时出现。未登录词识别命名实体(人名、地名)、新词，专业术语称为未登录词。也就是那些在分词词典中没有收录，但又确实能称为词的那些词。最典型的是人名，人可以很容易理解，但要是让计算机去识别就很困难。除了人名以外，还有机构名、地名、产品名、商标名、简称、省略语等都是很难处理的问题，而且这些又正好是人们经常使用的词，因此分词系统中的新词识别十分重要。新词识别准确率已经成为评价一个分词系统好坏的重要标志之一。中文自动分词的主要方法基于词典的分词这种方法又叫做机械分词方法，它是按照一定的策略将待分析的汉字串与一个”充分大的“机器词典中的词条进行匹配，若在词典中找到某个字符串，则匹配成功(识别出一个词)。按照扫描方向的不同，串匹配分词方法可以分为正向匹配和逆向匹配；按照不同长度优先匹配的情况，可以分为最大(最长)匹配和最小(最短)匹配；常用的几种机械分词方法如下：正向最大匹配法(由左到右的方向)；逆向最大匹配法(由右到左的方向)最少切分(使每一句中切出的词数最小)双向最大匹配法(进行由左到右、由右到左两次扫描)这类算法的优点是速度快，实现简单，效果尚可；但对歧义和未登录词处理效果不佳。上述各种方法之间可以相互结合，例如可以将正向最大匹配方法和逆向最大匹配方法结合起来构成双向匹配法。由于汉语单字成词的特点，正向最小匹配和逆向最小匹配一般很少使用。一般说来，逆向匹配的切分精度略高于正向匹配，遇到的歧义现象也较少。基于统计的分词从形式上看，词是稳定的字的组合，因此在上下文中，相邻的字同时出现的次数越多，就越有可能构成一个词。因此字与字相邻共现的频率或概率能够较好的反映成词的可信度。可以对语料中相邻共现的各个字的组合的频度进行统计，计算它们的互现信息。定义两个字的互现信息，计算两个汉字X、Y的相邻共现概率。互现信息体现了汉字之间结合关系的紧密程度。当紧密程度高于某一个阈值时，便可认为此字组可能构成了一个词。这种方法只需对语料中的字组频度进行统计，不需要切分词典，因而又叫做无词典分词法或统计取词方法。统计分词算法通常可分为基于有向图的全切分算法和基于字标注的机器学习算法：基于有向图的算法是将目标文本中的字符作为节点构成有向无环图，并利用统计学方法对分词路径进行选择 。基于字标注的分词算法是一种基于构词方法的分词算法，通过对文本中的每个字符的词位进行标注完成分词，可以有效识别未登录词。该算法的缺点是会经常抽出一些共现频度高、但并不是词的常用字组。例如”这一”、”之一”、”有的”、”我的”、”许多的”等。此外该算法对常用词的识别精度差，时空开销大，所以常与基于词典的分词方法搭配使用，取长补短。主要的统计模型有：N 元文法模型（N-gram），隐马尔可夫模型（Hidden Markov Model ，HMM），最大熵模型（ME），条件随机场模型（Conditional Random Fields，CRF）等。基于理解的分词这种分词方法是通过让计算机模拟人对句子的理解，达到识别词的效果。其基本思想就是在分词的同时进行句法、语义分析，利用句法信息和语义信息来处理歧义现象。它通常包括三个部分：分词子系统、句法语义子系统、总控部分。在总控部分的协调下，分词子系统可以获得有关词、句子等的句法和语义信息来对分词歧义进行判断，即它模拟了人对句子的理解过程。这种分词方法需要使用大量的语言知识和信息。由于汉语语言知识的笼统、复杂性，难以将各种语言信息组织成机器可直接读取的形式，因此目前基于理解的分词系统还处在试验阶段。中文自动分词的开源项目结巴(Jieba)分词HanLP分词器清华大学THULAC北京大学PkuSegSnowNLP","categories":[{"name":"自然语言处理","slug":"nlp","permalink":"zengmiaokun.github.io/categories/nlp/"}],"tags":[{"name":"自然语言处理","slug":"nlp","permalink":"zengmiaokun.github.io/tags/nlp/"}]}],"categories":[{"name":"自然语言处理","slug":"nlp","permalink":"zengmiaokun.github.io/categories/nlp/"}],"tags":[{"name":"自然语言处理","slug":"nlp","permalink":"zengmiaokun.github.io/tags/nlp/"}]}